% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/SensorSpaceInterpolation.R
\name{InterpolatePotentials}
\alias{InterpolatePotentials}
\title{Interpolate EEG/MEG data from sensors to a predefined sensor space.}
\usage{
InterpolatePotentials(potentials, x.elec, y.elec = NULL, grid.grain = 40L,
  x.vert = NULL, y.vert = NULL, extrapolate = FALSE,
  method = c("linear", "cubic", "tps"), electrode.dim = NULL,
  simplify = FALSE)
}
\arguments{
\item{potentials}{A vector containing data to be interpolated.}

\item{x.elec}{A matrix or a vector. If matrix, needs to contain the cartesian
  coordinates of the sensors. If vector, needs to contain the x-coordinates
  of the sensors.}

\item{y.elec}{A vector. The y-coordinates of the sensors.}

\item{grid.grain}{A scalar. This represents that spacing between the points in the
  grid. Defaults to 40, to create a relatively coarse surface. Higher values
  will create a more fine-grained, and therefore smoother-looking surface.}

\item{x.vert}{A scalar. Defaults to NULL. Akima may use this?}

\item{y.vert}{A scalar. Defaults to NULL. Akima may use this?}

\item{extrapolate}{A logical. Should the data be extrapolated beyond the
  convex hull created by the sensors? Defaults to FALSE. If TRUE, the
  interpolation will use the minimum spanning circle of the sensor space.}

\item{method}{A character string. Which interpolation method should be used?
  Currently accepts only three values: 'linear', for linear interpolation,
  'cubic' for cubic interpolation and 'tps', for thin-plate spline
  interpolation.}

\item{electrode.dim}{A scalar. In matrix 'potentials', what dimension
  represents time? Defaults to NULL, in which case the function takes a
  guess.}

\item{simplify}{A logical. Should output be simplified to save space?
  Defaults to false.}
}
\value{
List with interpolated potentials for each time slice.
}
\description{
Interpolate EEG/MEG data from sensors to a predefined sensor
  space.
}
\details{
Requires packages akima and rgcvpack for different types of data
  interpolation. Akima implements linear and cubic interpolation, while
  rgcvpack implements thin-plate spline interpolation.
}

